diff --git a/amplitude.module b/amplitude.module
index 67b0f3e..dd8154d 100644
--- a/amplitude.module
+++ b/amplitude.module
@@ -74,6 +74,7 @@ function _amplitude_get_event_js_fields(AmplitudeEvent $event) {
     'properties' => \Drupal::token()->replace($event->get('properties'), _amplitude_get_route_entities()),
     'event_trigger' => $event->get('event_trigger'),
     'event_trigger_other' => $event->get('event_trigger_other'),
+    'event_trigger_scroll_depths' => $event->get('event_trigger_scroll_depths'),
     'event_trigger_selector' => $event->get('event_trigger_selector'),
   ];
 }
diff --git a/config/schema/amplitude_event.schema.yml b/config/schema/amplitude_event.schema.yml
index b495c89..402e428 100644
--- a/config/schema/amplitude_event.schema.yml
+++ b/config/schema/amplitude_event.schema.yml
@@ -19,6 +19,9 @@ amplitude.amplitude_event.*:
     event_trigger_pages:
       type: string
       label: 'Event pages'
+    event_trigger_scroll_depths:
+      type: string
+      label: 'Event trigger scroll depths'
     event_trigger_other:
       type: string
       label: 'Custom event trigger'
diff --git a/js/amplitude-events.js b/js/amplitude-events.js
index 290c770..2c172d8 100644
--- a/js/amplitude-events.js
+++ b/js/amplitude-events.js
@@ -13,6 +13,9 @@
           triggerEvent(event);
           break;
 
+        case 'scroll':
+          triggerScrollEvent(event)
+
         case 'other':
           triggerEventOn(event, event['event_trigger_other']);
           break;
@@ -49,6 +52,52 @@
     });
   }
 
+  // Triggers scroll event
+  function triggerScrollEvent(event, trigger) {
+    if(!event['event_trigger_scroll_depths']) return;
+    var scrollDepths = event['event_trigger_scroll_depths'].split(',').map(function(item) {
+      return item.trim();
+    });
+    // some code below taken from http://javascriptkit.com/javatutors/detect-user-scroll-amount.shtml
+    var winheight, docheight, trackLength, throttlescroll
+    var getDocHeight = function() {
+      var D = document;
+      return Math.max(
+        D.body.scrollHeight, D.documentElement.scrollHeight,
+        D.body.offsetHeight, D.documentElement.offsetHeight,
+        D.body.clientHeight, D.documentElement.clientHeight
+      );
+    };
+    var getMeasurements = function() {
+      winheight= window.innerHeight || (document.documentElement || document.body).clientHeight;
+      docheight = getDocHeight();
+      trackLength = docheight - winheight;
+    };
+    var amountscrolled = function() {
+      var scrollTop = window.pageYOffset || (document.documentElement || document.body.parentNode || document.body).scrollTop;
+      var pctScrolled = Math.floor(scrollTop/trackLength * 100);
+      for(var i = scrollDepths.length-1; i >= 0; i--) {
+        if(pctScrolled >= scrollDepths[i]) {
+          var eventProps = JSON.parse(event['properties']);
+          eventProps['scroll_depth'] = scrollDepths[i];
+          event['properties'] = JSON.stringify(eventProps);
+          triggerEvent(event);
+          scrollDepths.splice(i, 1);
+        }
+      }
+    };
+    getMeasurements();
+    $(window).on('resize', getMeasurements);
+    setTimeout(function() {
+      $(window).on('scroll', function() {
+        clearTimeout(throttlescroll);
+        throttlescroll = setTimeout(function() {
+          amountscrolled()
+        }, 50);
+      });
+    }, 500);
+  }
+
   // Logs event debug.
   function triggerEventDebug(event_name, event_properties_parsed){
 
diff --git a/src/Entity/AmplitudeEvent.php b/src/Entity/AmplitudeEvent.php
index c0feac0..b8395c6 100644
--- a/src/Entity/AmplitudeEvent.php
+++ b/src/Entity/AmplitudeEvent.php
@@ -47,6 +47,8 @@ class AmplitudeEvent extends ConfigEntityBase implements AmplitudeEventInterface
 
   public const EVENT_TRIGGER_SELECT = 'select';
 
+  public const EVENT_TRIGGER_SCROLL = 'scroll';
+
   public const EVENT_TRIGGER_OTHER = 'other';
 
   /**
@@ -91,6 +93,13 @@ class AmplitudeEvent extends ConfigEntityBase implements AmplitudeEventInterface
    */
   protected $event_trigger_other;
 
+    /**
+   * The Amplitude event scroll depths.
+   *
+   * @var string
+   */
+  protected $event_trigger_scroll_depths;
+
   /**
    * The Amplitude event selector.
    *
@@ -109,6 +118,7 @@ class AmplitudeEvent extends ConfigEntityBase implements AmplitudeEventInterface
       self::EVENT_TRIGGER_PAGE_LOAD => t('Page load'),
       self::EVENT_TRIGGER_CLICK => t('On click'),
       self::EVENT_TRIGGER_SELECT => t('On select'),
+      self::EVENT_TRIGGER_SCROLL => t('On scroll'),
       self::EVENT_TRIGGER_OTHER => t('Other events'),
     ];
   }
diff --git a/src/Form/AmplitudeEventForm.php b/src/Form/AmplitudeEventForm.php
index 0263a33..e82d5b7 100644
--- a/src/Form/AmplitudeEventForm.php
+++ b/src/Form/AmplitudeEventForm.php
@@ -120,6 +120,7 @@ class AmplitudeEventForm extends EntityForm {
     $event_trigger = $this->entity->get('event_trigger');
     $event_trigger_pages = $this->entity->get('event_trigger_pages');
     $event_trigger_other = $this->entity->get('event_trigger_other');
+    $event_trigger_scroll_depths = $this->entity->get('event_trigger_scroll_depths');
     $event_trigger_selector = $this->entity->get('event_trigger_selector');
 
     $form['trigger_settings'] = [
@@ -170,7 +171,11 @@ class AmplitudeEventForm extends EntityForm {
       Url::fromUri('https://api.jquery.com/category/selectors/')
     )->toString();
     $selector_condition = [
-      ':input[name="event_trigger"]' => ['!value' => AmplitudeEvent::EVENT_TRIGGER_PAGE_LOAD],
+      ':input[name="event_trigger"]' => [
+        ['value' => AmplitudeEvent::EVENT_TRIGGER_CLICK],
+        ['value' => AmplitudeEvent::EVENT_TRIGGER_SELECT],
+        ['value' => AmplitudeEvent::EVENT_TRIGGER_OTHER]
+      ]
     ];
     $form['trigger_settings']['event_trigger_selector'] = [
       '#type' => 'textfield',
@@ -186,6 +191,22 @@ class AmplitudeEventForm extends EntityForm {
       '#default_value' => $event_trigger_selector,
     ];
 
+    $selector_scroll_condition = [
+      ':input[name="event_trigger"]' => ['value' => AmplitudeEvent::EVENT_TRIGGER_SCROLL],
+    ];
+    $form['trigger_settings']['event_trigger_scroll_depths'] = [
+      '#type' => 'textfield',
+      '#title' => $this->t('Page scroll depth(s)'),
+      '#description' => $this->t(
+        'A comma delimited list of scroll depth percentages that will send event properties to Amplitude (e.g. 25, 50, 75)'
+      ),
+      '#states' => [
+        'visible' => $selector_scroll_condition,
+        'required' => $selector_scroll_condition,
+      ],
+      '#default_value' => $event_trigger_scroll_depths,
+    ];
+
     return $form;
   }
 
