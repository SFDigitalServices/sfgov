{"version":3,"sources":["../../../../../libraries/sfgov-pattern-lab/pattern-lab/source/_patterns/00-protons/01-grid.scss","../../../../../libraries/sfgov-pattern-lab/pattern-lab/source/_patterns/00-protons/_02-mixins.scss","../../../../../libraries/sfgov-pattern-lab/node_modules/susy/sass/susy/_su-math.scss","_base.scss","../../../../../libraries/sfgov-pattern-lab/pattern-lab/source/_patterns/01-atoms/01-colors/01-colors.scss","paragraphs/_paragraphs.scss","_mixins.scss","_blocks.scss","_forms.scss","_messages.scss","_views.scss"],"names":[],"mappings":"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","file":"drupal.css","sourcesContent":["@import \"../../../../node_modules/susy/sass/susy-prefix\";\n@import \"../../../../node_modules/susy/sass/plugins/svg-grid\";\n@import \"02-mixins\";\n@import \"00-breakpoints\";\n\n@mixin media($bp) {\n  @media screen and (min-width: #{$bp}) {\n    @content;\n  }\n}\n\n@mixin media-max($bp) {\n  @media screen and (max-width: #{$bp}) {\n    @content;\n  }\n}\n\n// Basic grid settings.\n$susy: (\n  'columns': susy-repeat(12),\n  'gutters': 14px,\n  'spread': 'narrow',\n  'container-spread': 'narrow'\n);\n\n@mixin sfgov-container-full {\n  @include clearfix;\n  @include media($narrow-screen) {\n    width: 949px;\n    margin: 0 auto;\n    padding: 0;\n  }\n}\n\n@mixin sfgov-container-full--no-padding() {\n  @include clearfix;\n  @include media($narrow-screen) {\n    width: 949px;\n    margin: 0 auto;\n  }\n}\n\n@mixin sfgov-grid-two-columns--padding() {\n  @include clearfix;\n  @include media($narrow-screen) {\n    width: 949px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n}\n\n.sfgov-container--full {\n  @include clearfix;\n  padding: 50px 0;\n  @include media($narrow-screen) {\n    width: 949px;\n    margin: 0 auto;\n  }\n}\n\n.sfgov-container {\n  padding-left: susy-gutter() / 2;\n  padding-right: susy-gutter() / 2;\n  @include media($narrow-screen) {\n    width: 949px;\n    margin: 0 auto;\n    padding: 0;\n  }\n}\n\n.sfgov-width-one-whole {\n  width: susy-span(12 of 12);\n}\n\n.sfgov-width-one-half {\n  width: susy-span(6 wide of 12 wide);\n  float: left;\n  @include media($medium-screen) {\n    width: 100%;\n    float: inherit;\n  }\n}\n\n.sfgov-width-one-third {\n  width: susy-span(4 wide of 12 wide);\n  float: left;\n  @include media($medium-screen) {\n    width: 100%;\n    float: inherit;\n  }\n}\n\n.sfgov-width-one-fourth {\n  width: susy-span(3 wide of 12 wide);\n  float: left;\n  @include media($medium-screen) {\n    width: 100%;\n    float: inherit;\n  }\n}\n\n.sfgov-width-one-sixth {\n  width: susy-span(2 wide of 12 wide);\n  float: left;\n  @include media($medium-screen) {\n    width: susy-span(4 wide of 12 wide);\n    float: left;\n  }\n  @include media($mobile-screen) {\n    width: 100%;\n    float: inherit;\n  }\n}\n.sfgov-width-one-twelfth {\n  width: susy-span(1 wide of 12 wide);\n  float: left;\n  @include media($medium-screen) {\n    width: susy-span(4 wide of 12 wide);\n    float: left;\n  }\n  @include media($mobile-screen) {\n    width: 100%;\n    float: inherit;\n  }\n}\n\n.grid-example {\n  color: #fff;\n  .sfgov-grid {\n    background: svg-grid() no-repeat scroll;\n    .sfgov-width-one-whole,\n    .sfgov-width-one-half,\n    .sfgov-width-one-third,\n    .sfgov-width-one-fourth,\n    .sfgov-width-one-sixth,\n    .sfgov-width-one-twelfth {\n      background: #60585c;\n      padding: 10px;\n      text-align: center;\n      border: 1px dotted #e1f3f8;\n    }\n  }\n}\n\n// Grid Two Columns.\n\n.sfgov-grid-two-columns {\n  @include sfgov-grid-two-columns--padding;\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  @include media($narrow-screen) {\n    grid-template-columns: repeat(2, 1fr);\n    // padding: 30px 10px;\n  }\n  grid-template-rows: auto;\n  grid-gap: 20px 20px;\n  justify-items: stretch;\n  .transaction-card {\n    height: 100%;\n  }\n}\n\n// Right sidebar.\n\n.sfgov-container--right-sidebar {\n  padding: 0;\n  @include media-max($medium-screen) {\n    display: flex;\n    flex-direction: column;\n  }\n  .sfgov-container--content-left {\n    padding: 39px 25px 70px 25px;\n    @include media-max($medium-screen) {\n      order: 2;\n    }\n    @include media($medium-screen + 1) {\n      @include clearfix;\n      width: susy-span(7.8 narrow of 12 narrow);\n      float: left;\n    }\n    @include media($narrow-screen) {\n      padding: 0;\n    }\n    @include media-max($medium-screen) {\n      padding: 0;\n    }\n  }\n  .sfgov-container--content-right {\n    @include media-max($medium-screen) {\n      order: 1;\n    }\n    @include media($medium-screen + 1) {\n      width: susy-span(4 narrow of 12 narrow);\n      float: right;\n      @include clearfix;\n      padding: 0;\n    }\n  }\n  .sidebar-block {\n    margin-bottom: 2.6rem;\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n\n}\n\n// Preview.\n.preview {\n  @include clearfix;\n}\n","@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: block;\n  }\n}\n\n@mixin outer-container($local-max-width: $max-width) {\n  @include clearfix;\n  max-width: $local-max-width;\n  margin: {\n    left: auto;\n    right: auto;\n  }\n}\n\n\n// visually-hidden\n//\n// Hide elements visually, but keep them available for screen readers. Don't use\n// this for elements that need to be focusable (e.g. a, button, input, select,\n// textarea). For those, please use `visually-hidden-focusable` instead.\n//\n// Usage: `@include visually-hidden;`\n\n@mixin visually-hidden {\n  & {\n    clip: rect(1px, 1px, 1px, 1px);\n    height: 1px;\n    overflow: hidden;\n    position: absolute !important;\n    width: 1px;\n    word-wrap: normal;\n  }\n}\n\n// visually-hidden-focusable\n//\n// Hide elements visually, but keep them available, and focusable for screen\n// reader and keyboard users.\n//\n// Usage: `@include visually-hidden-focusable;`\n\n@mixin visually-hidden-focusable {\n  &:active,\n  &:focus {\n    clip: auto;\n    height: auto;\n    overflow: visible;\n    position: static !important;\n    width: auto;\n  }\n}\n","/// Grid Math Engine\n/// ================\n/// The `su` functions give you direct access to the math layer,\n/// without any syntax-sugar like shorthand parsing, and normalization.\n/// If you prefer named arguments, and stripped-down syntax,\n/// you can use these functions directly in your code –\n/// replacing `span`, `gutter`, and `slice`.\n///\n/// These functions are also useful\n/// for building mixins or other extensions to Susy.\n/// Apply the Susy syntax to new mixins and functions,\n/// using our \"Plugin Helpers\",\n/// or write your own syntax and pass the normalized results along\n/// to `su` for compilation.\n///\n/// @group su-math\n///\n/// @see su-span\n/// @see su-gutter\n/// @see su-slice\n/// @ignore _su-sum\n/// @ignore _su-calc-span\n/// @ignore _su-calc-sum\n/// @ignore _su-needs-calc-output\n\n\n\n// Su Span\n// -------\n/// Calculates and returns a CSS-ready span width,\n/// based on normalized span and context data –\n/// a low-level version of `susy-span`,\n/// with all of the logic and none of the syntax sugar.\n///\n/// - Grids defined with unitless numbers will return `%` values.\n/// - Grids defined with comparable units\n///   will return a value in the units provided.\n/// - Grids defined with a mix of units,\n///   or a combination of untiless numbers and unit-lengths,\n///   will return a `calc()` string.\n///\n/// @group su-math\n/// @see susy-span\n///\n/// @param {number | list} $span -\n///   Number or list of grid columns to span\n/// @param {list} $columns -\n///   List of columns available\n/// @param {number} $gutters -\n///   Width of a gutter in column-comparable units\n/// @param {0 | 1 | -1} $spread -\n///   Number of gutters spanned,\n///   relative to `span` count\n/// @param {0 | 1 | -1} $container-spread [$spread] -\n///   Number of gutters spanned,\n///   relative to `columns` count\n/// @param {integer} $location [1] -\n///   Optional position of sub-span among full set of columns\n///\n/// @return {length} -\n///   Relative or static length of a span on the grid\n@function su-span(\n  $span,\n  $columns,\n  $gutters,\n  $spread,\n  $container-spread: $spread,\n  $location: 1\n) {\n  $span: su-valid-span($span);\n  $columns: su-valid-columns($columns);\n  $gutters: su-valid-gutters($gutters);\n  $spread: su-valid-spread($spread);\n\n  @if (type-of($span) == 'number') {\n    @if (not unitless($span)) {\n      @return $span;\n    }\n\n    $location: su-valid-location($span, $location, $columns);\n    $span: su-slice($span, $columns, $location, $validate: false);\n  }\n\n  @if _su-needs-calc-output($span, $columns, $gutters, $spread, not 'validate') {\n    @return _su-calc-span($span, $columns, $gutters, $spread, $container-spread, not 'validate');\n  }\n\n  $span-width: _su-sum($span, $gutters, $spread, $validate: false);\n\n  @if unitless($span-width) {\n    $container-spread: su-valid-spread($container-spread);\n    $container: _su-sum($columns, $gutters, $container-spread, $validate: false);\n    @return percentage($span-width / $container);\n  }\n\n  @return $span-width;\n}\n\n\n\n// Su Gutter\n// ---------\n/// Calculates and returns a CSS-ready gutter width,\n/// based on normalized grid data –\n/// a low-level version of `susy-gutter`,\n/// with all of the logic and none of the syntax sugar.\n///\n/// - Grids defined with unitless numbers will return `%` values.\n/// - Grids defined with comparable units\n///   will return a value in the units provided.\n/// - Grids defined with a mix of units,\n///   or a combination of untiless numbers and unit-lengths,\n///   will return a `calc()` string.\n///\n/// @group su-math\n/// @see susy-gutter\n///\n/// @param {list} $columns -\n///   List of columns in the grid\n/// @param {number} $gutters -\n///   Width of a gutter in column-comparable units\n/// @param {0 | 1 | -1} $container-spread -\n///   Number of gutters spanned,\n///   relative to `columns` count\n///\n/// @return {length} -\n///   Relative or static length of one gutter in a grid\n@function su-gutter(\n  $columns,\n  $gutters,\n  $container-spread\n) {\n  @if (type-of($gutters) == 'number') {\n    @if ($gutters == 0) or (not unitless($gutters)) {\n      @return $gutters;\n    }\n  }\n\n  @if _su-needs-calc-output($gutters, $columns, $gutters, -1, not 'validate') {\n    @return _su-calc-span($gutters, $columns, $gutters, -1, $container-spread, not 'validate');\n  }\n\n  $container: _su-sum($columns, $gutters, $container-spread);\n  @return percentage($gutters / $container);\n}\n\n\n\n// Su Slice\n// --------\n/// Returns a list of columns\n/// based on a given span/location slice of the grid –\n/// a low-level version of `susy-slice`,\n/// with all of the logic and none of the syntax sugar.\n///\n/// @group su-math\n/// @see susy-slice\n///\n/// @param {number} $span -\n///   Number of grid columns to span\n/// @param {list} $columns -\n///   List of columns in the grid\n/// @param {number} $location [1] -\n///   Starting index of a span in the list of columns\n/// @param {bool} $validate [true] -\n///   Check that arguments are valid before proceeding\n///\n/// @return {list} -\n///   Subset list of grid columns, based on span and location\n@function su-slice(\n  $span,\n  $columns,\n  $location: 1,\n  $validate: true\n) {\n  @if $validate {\n    $columns: su-valid-columns($columns);\n    $location: su-valid-location($span, $location, $columns);\n  }\n\n  $floor: floor($span);\n  $sub-columns: ();\n\n  @for $i from $location to ($location + $floor) {\n    $sub-columns: append($sub-columns, nth($columns, $i));\n  }\n\n  @if $floor != $span {\n    $remainder: $span - $floor;\n    $column: $location + $floor;\n    $sub-columns: append($sub-columns, nth($columns, $column) * $remainder);\n  }\n\n  @return $sub-columns;\n}\n\n\n\n// Su Sum\n// ------\n/// Get the total sum of column-units in a layout.\n///\n/// @group su-math\n/// @access private\n///\n/// @param {list} $columns -\n///   List of columns in the grid\n/// @param {number} $gutters -\n///   Width of a gutter in column-comparable units\n/// @param {0 | 1 | -1} $spread -\n///   Number of gutters spanned,\n///   relative to `columns` count\n/// @param {bool} $validate [true] -\n///   Check that arguments are valid before proceeding\n///\n/// @return {number} -\n///   Total sum of column-units in a grid\n@function _su-sum(\n  $columns,\n  $gutters,\n  $spread,\n  $validate: true\n) {\n  @if $validate {\n    $columns: su-valid-span($columns);\n    $gutters: su-valid-gutters($gutters);\n    $spread: su-valid-spread($spread);\n  }\n\n  // Calculate column-sum\n  $column-sum: 0;\n  @each $column in $columns {\n    $column-sum: $column-sum + $column;\n  }\n\n  $gutter-sum: (ceil(length($columns)) + $spread) * $gutters;\n  $total: if(($gutter-sum > 0), $column-sum + $gutter-sum, $column-sum);\n\n  @return $total;\n}\n\n\n\n// Su Calc\n// -------\n/// Return a usable span width as a `calc()` function,\n/// in order to create mixed-unit grids.\n///\n/// @group su-math\n/// @access private\n///\n/// @param {number | list} $span -\n///   Pre-sliced list of grid columns to span\n/// @param {list} $columns -\n///   List of columns available\n/// @param {number} $gutters -\n///   Width of a gutter in column-comparable units\n/// @param {0 | 1 | -1} $spread -\n///   Number of gutters spanned,\n///   relative to `span` count\n/// @param {0 | 1 | -1} $container-spread [$spread] -\n///   Number of gutters spanned,\n///   relative to `columns` count\n/// @param {bool} $validate [true] -\n///   Check that arguments are valid before proceeding\n///\n/// @return {length} -\n///   Relative or static length of a span on the grid\n@function _su-calc-span(\n  $span,\n  $columns,\n  $gutters,\n  $spread,\n  $container-spread: $spread,\n  $validate: true\n) {\n  @if $validate {\n    $span: su-valid-span($span);\n    $columns: su-valid-columns($columns);\n    $gutters: su-valid-gutters($gutters);\n    $spread: su-valid-spread($spread);\n    $container-spread: su-valid-spread($container-spread);\n  }\n\n  // Span and context\n  $span: _su-calc-sum($span, $gutters, $spread, not 'validate');\n  $context: _su-calc-sum($columns, $gutters, $container-spread, not 'validate');\n\n  // Fixed and fluid\n  $fixed-span: map-get($span, 'fixed');\n  $fluid-span: map-get($span, 'fluid');\n  $fixed-context: map-get($context, 'fixed');\n  $fluid-context: map-get($context, 'fluid');\n\n  $calc: '#{$fixed-span}';\n  $fluid-calc: '(100% - #{$fixed-context})';\n\n  // Fluid-values\n  @if (not $fluid-span) {\n    $fluid-calc: null;\n  } @else if ($fluid-span != $fluid-context) {\n    $fluid-span: '* #{$fluid-span}';\n    $fluid-context: if($fluid-context, '/ #{$fluid-context}', '');\n    $fluid-calc: '(#{$fluid-calc $fluid-context $fluid-span})';\n  }\n\n  @if $fluid-calc {\n    $calc: if(($calc != ''), '#{$calc} + ', '');\n    $calc: '#{$calc + $fluid-calc}';\n  }\n\n  @return calc(#{unquote($calc)});\n}\n\n\n\n// Su Calc-Sum\n// -----------\n/// Get the total sum of fixed and fluid column-units\n/// for creating a mixed-unit layout with `calc()` values.\n///\n/// @group su-math\n/// @access private\n///\n/// @param {list} $columns -\n///   List of columns available\n/// @param {number} $gutters -\n///   Width of a gutter in column-comparable units\n/// @param {0 | 1 | -1} $spread -\n///   Number of gutters spanned,\n///   relative to `span` count\n/// @param {bool} $validate [true] -\n///   Check that arguments are valid before proceeding\n///\n/// @return {map} -\n///   Map with `fixed` and `fluid` keys\n///   containing the proper math as strings\n@function _su-calc-sum(\n  $columns,\n  $gutters,\n  $spread,\n  $validate: true\n) {\n  @if $validate {\n    $columns: su-valid-span($columns);\n    $gutters: su-valid-gutters($gutters);\n    $spread: su-valid-spread($spread);\n  }\n\n  $fluid: 0;\n  $fixed: ();\n  $calc: null;\n\n  // Gutters\n  $gutters:  $gutters * (length($columns) + $spread);\n\n  // Columns\n  @each $col in append($columns, $gutters) {\n    @if unitless($col) {\n      $fluid: $fluid + $col;\n    } @else {\n      $fixed: _su-map-add-units($fixed, $col);\n    }\n  }\n\n  // Compile Fixed Units\n  @each $unit, $total in $fixed {\n    @if ($total != (0 * $total)) {\n      $calc: if($calc, '#{$calc} + #{$total}', '#{$total}');\n    }\n  }\n\n  // Calc null or string\n  @if $calc {\n    $calc: if(str-index($calc, '+'), '(#{$calc})', '#{$calc}');\n  }\n\n  // Fluid 0 => null\n  $fluid: if(($fluid == 0), null, $fluid);\n\n\n  // Return map\n  $return: (\n    'fixed': $calc,\n    'fluid': $fluid,\n  );\n\n  @return $return;\n}\n\n\n\n// Needs Calc\n// ----------\n/// Check if `calc()` will be needed in defining a span,\n/// if the necessary units in a grid are not comparable.\n///\n/// @group su-math\n/// @access private\n///\n/// @param {list} $span -\n///   Slice of columns to span\n/// @param {list} $columns -\n///   List of available columns in the grid\n/// @param {number} $gutters -\n///   Width of a gutter\n/// @param {0 | 1 | -1} $spread -\n///   Number of gutters spanned,\n///   relative to `span` count\n/// @param {bool} $validate [true] -\n///   Check that arguments are valid before proceeding\n///\n/// @return {bool} -\n///   `True` when units do not match, and `calc()` will be required\n@function _su-needs-calc-output(\n  $span,\n  $columns,\n  $gutters,\n  $spread,\n  $validate: true\n) {\n  @if $validate {\n    $span: su-valid-span($span);\n    $columns: su-valid-columns($columns);\n    $gutters: su-valid-gutters($gutters);\n  }\n\n  $has-gutter: if((length($span) > 1) or ($spread >= 0), true, false);\n  $check: if($has-gutter, append($span, $gutters), $span);\n  $safe-span: _su-is-comparable($check...);\n\n  @if ($safe-span == 'static') {\n    @return false;\n  } @else if (not $safe-span) {\n    @return true;\n  }\n\n  $safe-fluid: _su-is-comparable($gutters, $columns...);\n\n  @return not $safe-fluid;\n}\n","\n@import '../../../../../libraries/sfgov-pattern-lab/pattern-lab/source/_patterns/01-atoms/01-colors/01-colors';\n@import '../../../../../libraries/sfgov-pattern-lab/pattern-lab/source/_patterns/00-protons/00-breakpoints';\n@import '../../../../../libraries/sfgov-pattern-lab/pattern-lab/source/_patterns/00-protons/02-mixins';\n@import '../../../../../libraries/sfgov-pattern-lab/pattern-lab/source/_patterns/00-protons/01-grid.scss';\n@import 'mixins';\n\nbody {\n    color: $color-gray;\n}\nli {\n  margin-bottom: 0;\n}","$color-blue: #0071bc;\n$color-blue-darker: #205493;\n$color-blue-darkest: #112e51;\n$color-aqua: #02c0e7;\n$color-aqua-dark: #00a6d2;\n$color-aqua-darkest: #046b99;\n$color-aqua-light: #9bdaf1;\n$color-aqua-lightest: #e1f3f8;\n$color-red: #e31c3d;\n$color-red-dark: #cd2026;\n$color-red-darkest: #981b1e;\n$color-red-light: #e59393;\n$color-red-lightest: #f9dede;\n$color-white: #ffffff;\n$color-black: #000000;\n$color-black-light: #212121;\n$color-gray-dark: #323a45;\n$color-gray: #5b616b;\n$color-gray-medium: #757575;\n$color-gray-light: #aeb0b5;\n$color-gray-lighter: #d6d7d9;\n$color-gray-lightest: #f1f1f1;\n$color-gray-warm-dark: #494440;\n$color-gray-warm-light: #e4e2e0;\n$color-gray-cool-light: #dce4ef;\n$color-gold: #fdb81e;\n$color-gold-light: #f9c642;\n$color-gold-lighter: #fad980;\n$color-gold-lightest: #fff1d2;\n$color-green: #2e8540;\n$color-green-light: #4aa564;\n$color-green-lighter: #94bfa2;\n$color-green-lightest: #e7f4e4;\n$color-cool-blue: #205493;\n$color-cool-blue-light: #4773aa;\n$color-cool-blue-lighter: #8ba6ca;\n$color-cool-blue-lightest: #dce4ef;\n$color-purple: #4c2c92;\n\n// Functional colors\n$color-primary:              $color-blue !default;\n$color-primary-darker:       $color-blue-darker !default;\n$color-primary-darkest:      $color-blue-darkest !default;\n\n$color-primary-alt:          $color-aqua !default;\n$color-primary-alt-dark:     $color-aqua-dark !default;\n$color-primary-alt-darkest:  $color-aqua-darkest !default;\n$color-primary-alt-light:    $color-aqua-light !default;\n$color-primary-alt-lightest: $color-aqua-lightest !default;\n\n$color-secondary:            $color-red !default;\n$color-secondary-dark:       $color-red-dark !default;\n$color-secondary-darkest:    $color-red-darkest !default;\n$color-secondary-light:      $color-red-light !default;\n$color-secondary-lightest:   $color-red-lightest !default;\n\n$color-base:                 $color-black-light !default;\n$color-focus:                $color-gray-light !default;\n$color-visited:              $color-purple !default;\n\n$color-shadow:               rgba(#000, 0.3) !default;\n$color-transparent:          rgba(#000, 0) !default;\n\n","\n.paragraph--type--list {\n  .paragraph--type--list-item {\n    padding-top: 15px;\n    padding-bottom: 15px;\n    padding-left: 20px;\n  }\n}\n\n.sfgov-drupal-two-columns-list {\n  .field__items {\n    @include media($medium-screen) {\n      display: grid;\n      grid-template-columns: repeat(2, 1fr);\n    }\n  }\n}\n\n.path-frontpage {\n  .field--type-link.__link {\n    a:visited {\n      color: $color-white;\n    }\n  }\n}\n\n.parent--bundle--page {\n  .sfgov-container {\n    padding: 0;\n  }\n  h3 {\n    margin-top: 0;\n    color: $color-blue-darker;\n  }\n  .__text {\n    margin-bottom: 30px;\n    h3 {\n      @include source-sans-pro;\n      color: $color-gray-dark;\n      font-size: 20px;\n      line-height: 26px;\n      @include media($medium-screen) {\n        margin-bottom: 18px;\n      }\n    }\n    p {\n      color: $color-gray;\n      margin: 10px 0;\n    }\n  }\n  &.paragraph--type--in-person-location .eck-entity {\n    .__title {\n      @include source-sans-pro;\n      color: $color-gray-dark;\n      font-size: 20px;\n      line-height: 26px;\n      font-weight: bold;\n      margin-bottom: 8px;\n    }\n    .__address {\n      margin-bottom: 8px;\n    }\n    .__operating-hours {\n      color: $color-gray;\n    }\n  }\n}\n\n.path-frontpage {\n  .sfgov-services {\n    .sfgov-cta-button__container {\n      a {\n        margin-left: 15px;\n      }\n    }\n  }\n}\n\n.paragraph--type--cost {\n  .__cost-flat-fee, .__text {\n      color: $color-gray;\n  }\n}\n\n.paragraph--type--thing-to-know p {\n  color: $color-gray;\n}","@mixin media($bp) {\n  @media screen and (min-width: #{$bp}) {\n    @content;\n  }\n}\n\n@mixin media-max($bp) {\n  @media screen and (max-width: #{$bp}) {\n    @content;\n  }\n}\n\n\n@mixin source-sans-pro {\n  font-family: \"Source Sans Pro\", sans-serif;\n}\n\n@mixin merriweather {\n  font-family: \"Merriweather\", sans-serif;\n}\n\n@mixin open-sans {\n  font-family: \"Open Sans\", sans-serif;\n}\n\n@mixin montserrat {\n  font-family: \"Montserrat\", sans-serif;\n}\n\n","\n.sfgov-new-website {\n  margin-bottom: 30px;\n  margin-top: 20px;\n  @include media($narrow-screen) {\n    margin-bottom: 71px;\n  }\n}\n\n#block-search-page-block-sfgov {\n  background: $color-aqua-lightest;\n}\n\n.block-views-exposed-filter-blocksearch-page-1 {\n  .sfgov-container {\n    &.search-results {\n      padding: 42px 0 53px 0;\n      h2 {\n        display: block;\n        margin: 0 0 42px 0;\n        line-height: initial;\n        color: $color-blue-darker;\n        font-size: 4rem;\n      }\n      @include media-max($narrow-screen) {\n        padding: 25px;\n        h2 {\n          font-size: 3rem;\n          margin: 0 0 25px 0;\n        }\n      }\n    }\n    h2 {\n      display: none;\n    }\n    @media all and (max-width: 929px) {\n      padding: 0;\n    }\n  }\n}\n\n.sfgov-nav.sfgov-mobile_nav-container {\n  flex-grow: 1;\n}\n\n@media screen and (max-width: 950px) {\n  .sfgov-logo__container {\n    flex-grow: 1;\n  }\n}\n\n\n\n.head-right--container {\n  display: flex;\n  align-items: center;\n  @include media-max($mobile-screen) {\n    overflow: hidden;\n  }\n}\n\n#block-gtranslate {\n  display: flex;\n  align-items: center;\n}\n.gtranslate {\n  cursor: pointer;\n  display: flex;\n  max-width: 155px;\n  @include media-max($mobile-screen) {\n    width: 41px;\n    margin-right: 10px;\n  }\n  @include media-max($tiny-screen) {\n    width: 40px;\n    margin-right: 5px;\n  }\n  &::before {\n    content: '';\n    background: url(\"../../src/img/translate.png\") no-repeat;\n    background: url(\"../../src/img/translate.svg\") no-repeat;\n    height: 30px;\n    width: 50px;\n    display: block;\n    position: relative;\n    top: 5px;\n    margin-left: 5px;\n    @include media-max($mobile-screen) {\n      min-width: 48px;\n      display: block;\n      right: 0;\n    }\n  }\n\n  select {\n    border: 0;\n    margin: 0;\n    font-size: 16px;\n    line-height: 17px;\n    color: #0071bc;\n    font-family: 'Source Sans Pro', sans-serif;\n    font-weight: normal;\n    position: relative;\n    right: 40px;\n    padding: 5px 5px 5px 50px;\n    background: transparent;\n    cursor: pointer;\n    @include media-max($mobile-screen) {\n      font-size: 16px;\n      right: 65px;\n    }\n    &:focus {\n      outline: 0;\n    }\n    option {\n      background: #122E51;\n      padding: 0;\n      margin: 0;\n      width: 300px;\n      @include media-max($mobile-screen) {\n        font-size: 16px;\n        position: relative;\n        right: 50px;\n      }\n    }\n  }\n}\n\n.sfgov-logo {\n  @include media-max($narrow-screen){\n    flex-grow: 1;\n  }\n}\n\n.sfgov-logo__container {\n  .sfgov-logo {    \n    @include media-max($mobile-screen) {\n      .sfgov-logo__text {\n        .sfgov-logo__text--title {\n          font-size: 1.7rem;\n        }\n      }\n    }\n  }\n}\n\n.responsive-search {\n  position: relative;\n  .responsive-search--container {\n    border-bottom: 1px solid $color-gray-lighter;\n    position: absolute;\n    z-index: 1000;\n    width: 100%;\n    display: none;\n    .close {\n      position: absolute;\n      top: 6px;\n      right: 10px;\n      .fa {\n        cursor: pointer;\n        font-size: 23px;\n        color: #323a45;\n      }\n    }\n    .sfgov-search-form {\n      background: #ffffff;\n      padding: 40px 8px 8px 8px;\n      .js-form-type-textfield {\n        width: 100%;\n      }\n      .form-actions {\n        width: 40px;\n        padding-right: 0;\n      }\n      [type=submit] {\n        font-size: 0;\n      }\n    }\n    .form-actions {\n      position: relative;\n      padding-right: 10px;\n      @include media($medium-screen) {\n        padding-right: 0;\n      }\n      &::before {\n        position: absolute;\n        content: ' ';\n        display: block;\n        background: url(\"../images/icons/search.png\") no-repeat;\n        background: url(\"../images/icons/search.svg\") no-repeat;\n        width: 30px;\n        height: 30px;\n        pointer-events: none;\n        left: 3px;\n        top: 6px;\n        @include media($medium-screen + 1) {\n          left: 15px;\n          top: 5px;\n        }\n      }\n    }\n    .form-submit {\n      font-size: 0;\n    }\n    .sfgov-search-form {\n      width: 100%;\n    }\n  }\n}\n\n.sfgov-container--content-left {\n  .views-element-container {\n    .views-row:last-child {\n      .sfgov-transaction-search--container {\n        border-bottom: 0;\n      }\n    }\n  }\n}\n\n.sfgov-container--right-sidebar {\n  .views-element-container {\n    .views-row {\n      @include media($narrow-screen) {\n        margin-left: 33px;\n      }\n    }\n    h3 {\n      margin: 25px;\n      @include media($narrow-screen) {\n        margin: 30px 33px;\n      }\n    }\n  }\n}\n\n.no-search-results--container {\n  h2 {\n    font-size: 2rem;\n    color: $color-blue;\n  }\n  p {\n    color: $color-gray;\n  }\n  @include media-max($narrow-screen) {\n    margin: 25px;\n  }\n  @include sfgov-container-full;\n}\n","\n.path-frontpage .landing__content > .field__items > {\n  .field__item:first-child {\n    // search slice.\n    background-color: #E2E2E2;\n    padding-top: 36px;\n    padding-bottom: 34px;\n    .paragraph--type--section {\n      &::after {\n        content: '';\n        display: table;\n        clear: both;\n      }\n      .field__items {\n        .field__item:first-child {\n          width: 100%;\n        }\n        .field__item {\n          float: left;\n          @media all and (min-width: 484px) {\n            margin-right: 0;\n          }\n        }\n        .field__item:nth-child(5) {\n          @media all and (min-width: 769px) {\n            clear: left;\n          }\n        }\n        .paragraph--type--button {\n          a {\n            margin: 15px 15px 0 0;\n            border: 2px solid #0071bc;\n            background: #fff;\n            color: #0071bc;\n            padding: 12px 23px 14px 23px;\n            font-size: 15px;\n            line-height: 19px;\n          }\n        }\n      }\n    }\n  }\n}\n\n\n.sfgov-responsive--search-form {\n  .sfgov-search-form {\n    .js-form-type-textfield {\n      display: none;\n      @include media($medium-screen) {\n        width: 194px;\n        display: block;\n      }\n    }\n    .form-actions {\n      position: relative;\n      padding-right: 10px;\n      @include media($medium-screen) {\n        padding-right: 0;\n      }\n      &::before {\n        position: absolute;\n        content: ' ';\n        display: block;\n        background: url(\"../images/icons/search.png\") no-repeat;\n        background: url(\"../images/icons/search.svg\") no-repeat;\n        width: 30px;\n        height: 30px;\n        pointer-events: none;\n        left: 6px;\n        top: 6px;\n        @include media($medium-screen + 1) {\n          left: 15px;\n          top: 5px;\n        }\n      }\n      [type=submit] {\n        border-top-left-radius: 5px;\n        border-bottom-left-radius: 5px;\n        width: 45px !important;\n        @include media($medium-screen) {\n          width: 63px !important;\n          border-top-left-radius: 0;\n          border-bottom-left-radius: 0;\n        }\n      }\n    }\n  }\n}\n\n.user-login-form {\n  @include sfgov-container-full;\n  .description {\n    font-size: 1.4rem;\n    color: $color-gray-dark;\n  }\n  #edit-submit {\n    margin-top: 15px;\n  }\n  @include media-max($narrow-screen) {\n    width: 949px;\n    margin: 0 auto;\n    padding: 0 20px;\n  }\n  @include media-max($mobile-screen) {\n    width: auto;\n    padding: 0 20px;\n    label {\n      margin-top: 1.5rem;\n    }\n  }\n}",".sfgov-alert-error {\n  background-image: url(./../images/alerts/error.png);\n  background-image: url(./../images/alerts/error.svg);\n}\n\n.sfgov-alert-success {\n  background-image: url(./../images/alerts/success.png);\n  background-image: url(./../images/alerts/success.svg);\n}\n\n.sfgov-alert-warning {\n  background-image: url(./../images/alerts/warning.png);\n  background-image: url(./../images/alerts/warning.svg);\n}\n","\n.sfgov-container--content-right {\n  .field {\n    margin-bottom: 30px;\n  }\n  .field--type-telephone {\n    a {\n      text-decoration: none;\n    }\n  }\n  .__address {\n    .address {\n      margin: 0;\n      color: $color-gray;\n      font-size: 17px;\n      line-height: 26px;\n    }\n    .__title {\n      @include source-sans-pro;\n      color: $color-gray-dark;\n      font-weight: 600; // semi-bold\n      font-size: 20px;\n      line-height: 26px;\n      margin: 0 0 10px 0;\n    }\n  }\n  .office-hours {\n    .office-hours__table {\n      margin: 10px 0 0 0;\n    }\n    .office-hours__item-comments {\n      &:empty {\n        display: none;\n      }\n    }\n  }\n  .paragraph--type--phone {\n    .__owner {\n      @include source-sans-pro;\n      font-size: 20px;\n      line-height: 26px;\n      color: $color-gray-dark;\n      font-weight: bold;\n    }\n    .__owner,\n    .__tel {\n      margin-bottom: 10px;\n    }\n  }\n}\narticle.transaction .sfgov-container--content-right {\n  @include media-max($medium-screen) {\n    order: 2;\n  }\n}\n.view--departments-block-1 {\n  margin-bottom: 0;\n  @include media($medium-screen) {\n    margin-bottom: 60px;\n  }\n  ul {\n    padding-left: 25px;\n    margin: 25px 0;\n    li {\n      list-style: none;\n    }\n  }\n  .views-row:last-of-type {\n    .department-search-result {\n      border-bottom: 0;\n    }\n  }\n}\n\n.view-services-block-1 {\n  padding: 0;\n  @include media($medium-screen) {\n    padding: 61px 0 41px 0;\n  }\n  .views-row {\n    @include media($medium-screen) {\n      margin: 0 21px;\n    }\n    &:last-child {\n      .sfgov-transaction-search--container {\n        border-bottom: 0;\n      }\n    }\n  }\n}\n\n.sfgov-search-result {\n  &.views-row {\n    @include sfgov-container-full;\n    @include media-max($narrow-screen) {\n      \n    }\n  }\n}\n\n.sfgov-view-content-container {\n  margin: 40px auto 0 auto;\n  &.sfgov-services {\n    margin-bottom: 70px;\n  }\n  @include media-max($narrow-screen) {\n    margin-top: 30px;\n    margin-left: 10px;\n    margin-right: 10px;\n  }\n}\n\n.__cost-minimum, .__cost-maximum {\n  display: inline;\n}\n"]}