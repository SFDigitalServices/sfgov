{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% set parent = paragraph.getParentEntity() %}
{%
set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  not paragraph.isPublished() ? 'paragraph--unpublished',
  "parent--bundle--" ~ parent.bundle
]
%}
{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    {% block content %}
      {%  set field_address = paragraph.field_location.entity.field_address[0] %}
      {%  set org = paragraph.field_location.entity.field_text[0] %}
      {% if not field_address.isEmpty() %}
        {% set parent_bundle = parent.bundle() %}
        {% if parent_bundle == "step" %}
          {% if field_address.locality or field_address.postal_code or field_address.administrative_area %}
              {% if field_address.locality %}
                  {% set city = "#{field_address.locality}," %}
              {% endif %}
              {% set line2 = "#{city} #{field_address.administrative_area} #{field_address.postal_code}" %}
          {% endif %}
          {% include "@molecules/04-cards/03-address-card.twig" with {
            "address_card": {
              "icon": "mail",
              "organization": field_address.organization,
              "line1": field_address.address_line1,
              "line2": line2
            }
          } %}
        {% else %}
          {% include "@atoms/06-address/06-address.twig" with {
            "given_name": field_address.given_name,
            "family_name": field_address.family_name,
            "organization": field_address.organization,
            "address_line1": field_address.address_line1,
            "address_line2": field_address.address_line2,
            "dependent_locality": field_address.dependent_locality,
            "locality": field_address.locality,
            "postal_code": field_address.postal_code,
            "administrative_area": field_address.administrative_area
          } %}
        {% endif %}
      {% endif %}
      {{ content|without('field_address', 'field_location') }}
    {% endblock %}
  </div>
{% endblock paragraph %}
