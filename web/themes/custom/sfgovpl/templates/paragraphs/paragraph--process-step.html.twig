{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
    'step-container'
  ]
%}
{% set optional = paragraph.field_process_optional.getValue()[0].value %}
{% set showMoreText = 'Show more'|t %}
{% set showLessText = 'Show less'|t %}
{% block paragraph %}
  <div{{ attributes.addClass(classes) }} data-toggle-container>
    {% block content %}
      <div class="step-left">
        <h3>{{ content.field_title }}</h3>
        <div class="step-optional {{ optional == '0' ? 'hidden' : '' }}">{{ 'Optional step'|t }}</div>
        {% if (content.field_cost|render) or (content.field_text_time|render) %}
          <div class="step-meta">
            {% if content.field_cost | render %}
              <div class="step-cost">{{ content.field_cost }}</div>
            {% endif %}
            {% if content.field_text_time | render %}
              <div class="step-time"><h4>{{ paragraph.field_text_time.fielddefinition.label }}:</h4> {{ content.field_text_time }}</div>
            {% endif %}
          </div>
        {% endif %}
      </div>
      <div class="step-right">
        <div class="content" data-toggle-content>
          <div class="step-description">{{ content.field_process_step_description }}</div>
          {% if content.field_transaction | render %}
            {% set txTitle = content.field_transaction.0['#title'] %}
            {% set txUrl = content.field_transaction.0['#url'].toString() %}
            <div class="step-transaction-link">
              {#
                sbsId and txId are coming from paragraph_preprocess hook
                these need to get passed to the linked transaction as url params, so js can populate the
                "Part of Step by step: Step by step page title"
              #}
              <a href="{{ txUrl }}?from=sbs&sbsid={{ sbsId }}&txid={{ txId }}">{{ txTitle }}</a>
            </div>
          {% endif %}
        </div>
      </div>
    {% endblock %}
    <a class="show-more-link" role="button"
      data-toggle-trigger
      data-show-text="{{ showMoreText }}"
      data-hide-text="{{ showLessText }}"
      href="javascript:void(0)">{{ showMoreText }}</a>
  </div>
{% endblock paragraph %}
