{#
/**
 * @file
 * Theme override to display the main menu.
 *
 * Available variables:
 * - menu_name: The machine name of the menu.
 * - items: A nested list of menu items. Each menu item contains:
 *   - attributes: HTML attributes for the menu item.
 *   - below: The menu item child items.
 *   - title: The menu link title.
 *   - url: The menu link url, instance of \Drupal\Core\Url
 *   - localized_options: Menu link localized options.
 *   - is_expanded: TRUE if the link has visible children within the current
 *     menu tree.
 *   - is_collapsed: TRUE if the link has children within the current menu tree
 *     that are not currently visible.
 *   - in_active_trail: TRUE if the link is in the active trail.
 */
#}
{{ attach_library('hops/a11y-toggle') }}

{# render a menu toggle. #}
<button type="button" class="nav-toggle js-nav-toggle" data-a11y-toggle="nav-toggle-target">
  <svg width="20" height="14" viewBox="0 0 20 14" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
    <rect  class="navicon__item" x="0" y="0" width="20" height="2" fill="#333"></rect>
    <rect  class="navicon__item" x="0" y="6" width="20" height="2" fill="#333"></rect>
    <rect  class="navicon__item" x="0" y="12" width="20" height="2" fill="#333"></rect>
  </svg>
</button>

{% import _self as menus %}

{#
  We call a macro which calls itself to render the full tree.
  @see http://twig.sensiolabs.org/doc/tags/macro.html
#}
{{ menus.menu_links(items, attributes, 0) }}
{% macro menu_links(items, attributes, menu_level) %}
  {% if menu_level != 0 %}
  {{ attach_library('hops/dropdown') }}
  {% endif %}

  {% import _self as menus %}
  {% if items %}
    {% if menu_level == 0 %}
      <ul{{ attributes.addClass(['menu', 'menu--first-level', 'collapsible-box']).setAttribute('id', 'nav-toggle-target') }}>
    {% else %}
      <ul{{ attributes.addClass('submenu', 'dropdown').removeClass('menu--first-level', 'collapsible-box').removeAttribute('id') }}>
    {% endif %}
    {% for item in items %}
      {%
        set item_classes = [
          'menu-item',
          item.is_expanded or item.is_collapsed ? 'menu-item--has-child',
          item.in_active_trail ? 'menu-item--active-trail',
          item.is_expanded ? 'has-dropdown',
        ]
      %}
      <li{{ item.attributes.addClass(item_classes) }}>
        {%
          set link_classes = [
            'menu-link',
          ]
        %}
        {{ link(item.title, item.url, { 'class':link_classes}) }}
        {% if item.below %}
          {{ menus.menu_links(item.below, attributes, menu_level + 1) }}
        {% endif %}
      </li>
    {% endfor %}
    </ul>
  {% endif %}
{% endmacro %}
