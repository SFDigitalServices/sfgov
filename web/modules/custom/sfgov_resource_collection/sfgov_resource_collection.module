<?php

/**
 * @file
 * Modify resource collection nodes.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_ENTITY_TYPE_prepare_form().
 */
function sfgov_resource_collection_node_prepare_form(EntityInterface $entity, $operation, FormStateInterface $form_state) {
  if ($entity->isNew() && $entity->bundle() == 'resource_collection') {
    $storage = \Drupal::entityTypeManager()->getStorage('paragraph');
    $langcode = $form_state->get('langcode');

    // Append items into Custom Sections.
    $template = [
      'Documents' => [
        'paragraph_type' => 'section',
        'sub_paragraph_type' => 'document_section',
      ],
      'Data' =>
        [
          'paragraph_type' => 'section',
          'sub_paragraph_type' => 'data_story_reference_section',
        ],
      'Resources' => [
        'paragraph_type' => 'section',
        'sub_paragraph_type' => 'resource_section',
      ],
    ];

    foreach ($template as $title => $paragraphs) {
      $paragraphs_entity = $storage->create([
        'type' => $paragraphs['paragraph_type'],
        'langcode' => $langcode,
        'field_title' => $title,
      ]);

      if ($paragraphs['sub_paragraph_type'] != NULL) {
        $sub_paragraph_entity = $storage->create([
          'type' => $paragraphs['sub_paragraph_type'],
          'langcode' => $langcode,
          'field_title' => $title,
        ]);
        $paragraphs_entity->get('field_content')->appendItem($sub_paragraph_entity);
      }

      $entity->get('field_content')->appendItem($paragraphs_entity);
    }
  }
}
