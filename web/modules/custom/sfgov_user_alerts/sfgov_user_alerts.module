<?php

/**
 * @file
 * Primary module hooks for SF Gov User Alerts module.
 */

use Drupal\Core\File\Exception\FileException;
use Drupal\Core\Link;
use Drupal\Core\Url;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Site\Settings;
use Drupal\update\UpdateFetcherInterface;
use Drupal\update\UpdateManagerInterface;

 /**
  * Implements hook_page_top().
  */
 function sfgov_user_alerts_page_top(&$page_top) {
  /** @var \Drupal\Core\Routing\AdminContext $admin_context */
  $admin_context = \Drupal::service('router.admin_context');
  $route_match = \Drupal::routeMatch();
  if ($admin_context->isAdminRoute($route_match->getRouteObject()) && \Drupal::currentUser()->hasPermission('administer site configuration') || \Drupal::currentUser()->hasPermission('see update alerts')) {
    $route_name = \Drupal::routeMatch()->getRouteName();
    switch ($route_name) {
      // These pages don't need additional nagging.
      case 'update.theme_update':
      case 'system.theme_install':
      case 'update.module_update':
      case 'update.module_install':
      case 'update.status':
      case 'update.report_update':
      case 'update.report_install':
      case 'update.settings':
      case 'system.status':
      case 'update.confirmation_page':
        return;

      // If we are on the appearance or modules list, display a detailed report
      // of the update status.
      case 'system.themes_page':
      case 'system.modules_list':
        $verbose = TRUE;
        break;

    }
    module_load_install('update');
    $status = update_requirements('runtime');
    foreach (['core', 'contrib'] as $report_type) {
      $type = 'update_' . $report_type;
      // hook_requirements() supports render arrays therefore we need to render
      // them before using
      // \Drupal\Core\Messenger\MessengerInterface::addStatus().
      if (isset($status[$type]['description']) && is_array($status[$type]['description'])) {
        $status[$type]['description'] = \Drupal::service('renderer')->renderPlain($status[$type]['description']);
      }
      if (!empty($verbose)) {
        if (isset($status[$type]['severity'])) {
          if ($status[$type]['severity'] == REQUIREMENT_ERROR) {
            \Drupal::messenger()->addError($status[$type]['description']);
          }
          elseif ($status[$type]['severity'] == REQUIREMENT_WARNING) {
            \Drupal::messenger()->addWarning($status[$type]['description']);
          }
        }
      }
      // Otherwise, if we're on *any* admin page and there's a security
      // update missing, print an error message about it.
      else {
        if (isset($status[$type])
            && isset($status[$type]['reason'])
            && $status[$type]['reason'] === UpdateManagerInterface::NOT_SECURE) {
          \Drupal::messenger()->addError($status[$type]['description']);
        }
      }
    }
  }
}


/**
 * Implements hook_module_implements_alter().
 */
function sfgov_user_alerts_module_implements_alter(&$implementations, $hook) {
  if ($hook === 'page_top') {
    unset($implementations['update']);
  }
}
