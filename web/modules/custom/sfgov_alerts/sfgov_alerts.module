<?php

/**
 * @file
 * Contains sfgov_alerts.module.
 */

use Drupal\sfgov_alerts\Alert;
use Drupal\Core\Form\FormState;
use Drupal\node\NodeInterface;

/**
 * @param $entity Drupal\Core\Entity\Entity
 *
 * Implements hook_entity_presave().
 */
function sfgov_alerts_entity_presave($entity) {
  if ($entity->getEntityTypeId() == 'node' && $entity->hasField('field_alert_expiration_date')) {
    _sfgov_alerts_notify($entity);
  }
}

/**
 * Implements hook_form_alter().
 */
function sfgov_alerts_form_alter(&$form, FormState $form_state, $form_id) {
  $node = \Drupal::routeMatch()->getParameter('node');
  if (!empty($node) && $node instanceof NodeInterface) {
    if ($node->hasField('field_alert_expiration_date')) {
      $date_exp = $node->field_alert_expiration_date->value;
      $date_today = date('Y-m-d');

      if ($date_today <= $date_exp) {
        if(empty($form['#fieldgroups']['group_alert'])) {
          $form['#fieldgroups']['group_alert'] = new stdClass();
        }
        $form['#fieldgroups']['group_alert']->format_settings['open'] = TRUE;
      }
    }
  }
}

/**
 * @param $entity Drupal\Core\Entity\Entity
 *
 * Send alert information to logs.
 */
function _sfgov_alerts_notify($entity) {
  if (!$entity->isNew()) {
    $expiration_original = $entity->original->field_alert_expiration_date->value ? $entity->original->field_alert_expiration_date->value : 'none';
    $expiration_updated = $entity->field_alert_expiration_date->value ? $entity->field_alert_expiration_date->value : 'none';

    if ($expiration_original != $expiration_updated) {
      $message = t(
        '<div class="message-alert-updated" data-alertmessage="message" data-style="@type" data-exp="@expiration" data-user="@current_user"><em>@type</em>Alert Expiration Date has changed from <b>@expiration_original</b> to <b>@expiration.</b><br> Alert Text: <b>@text</b></div>', [
        '@type' => $entity->label(),
        '@text' => !empty($entity->field_alert_text->value) ? strip_tags($entity->field_alert_text->value) : $entity->field_alert_text->value,
        '@expiration' => $expiration_updated,
        '@expiration_original' => $expiration_original,
        '@current_user' => \Drupal::currentUser()->getAccountName(),
      ]);

      \Drupal::messenger()->addMessage($message);
    }
  }
}
