<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_ENTITY_TYPE_prepare_form().
 */
function sfgov_locations_node_prepare_form(EntityInterface $entity, $operation, FormStateInterface $form_state) {
  if ($entity->isNew() && $entity->bundle() == 'location') {
    $storage = \Drupal::entityTypeManager()->getStorage('paragraph');
    $langcode = $form_state->get('langcode');

    foreach ([
      'Parking',
      'Accessibility',
      'Public transportation'
    ] as $title) {
      $paragraphs_entity = $storage->create([
        'type' => 'accordion_item_simple',
        'langcode' => $langcode,
        'field_title' => $title,
      ]);
      $entity->get('field_getting_here_items')->appendItem($paragraphs_entity);
    }
  }
}

/**
 * Implements template_preprocess_node().
 */
function sfgov_locations_preprocess_node(&$variables) {
  $node = $variables['node'];

  // Build the addresses list for the Location content type.
  if ($node->bundle() == 'location') {
    // Get departments.
    $departments = $node->field_departments->referencedEntities();

    // View builder for Location entity.
    $location_view_builder = \Drupal::entityTypeManager()->getViewBuilder('location');

    // Get addresses.
    $department_addresses = [];
    foreach ($departments as $department) {
      $item = [
        'label' => $department->label(),
        'url' => $department->field_url->getValue() ? $department->field_url->uri : $department->toUrl()->toString()
      ];

      // Query departments from the Location entity to match with the referenced
      // departments on the Location content type.
      $query = \Drupal::entityQuery('location')
        ->condition('field_department', $department->id())
        ->condition('field_show_on_dept', TRUE);

      // If there is any result, add into the $item array.
      if ($result = $query->execute()) {
        if ($address = \Drupal::entityTypeManager()->getStorage('location')->load(reset($result))) {
          $address_view = $location_view_builder->view($address, 'default');
          $item['address'] = render($address_view);
        }
      }

      $department_addresses[] = $item;
    }

    // Pass the addresses to the template.
    $variables['departments'] = $department_addresses;
  }
}
