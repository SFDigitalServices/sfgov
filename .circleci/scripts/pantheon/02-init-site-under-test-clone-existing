#!/bin/bash
set -eo pipefail

# delete (transient) npm dependencies, as they're only used to build assets here
# and not needed for the Pantheon runtime
rm -rf \
  web/modules/custom/*/node_modules \
  web/themes/custom/*/node_modules

target_env="$TERMINUS_SITE.$TERMINUS_ENV"
source_env="$TERMINUS_SITE.dev"
# check if the $TERMINUS_ENV already exists.  if it does, don't clone the content
if ! terminus -n env:info $target_env ; then # env does not exist
  # Create a new multidev site to test on
  terminus -n env:wake $source_env
  terminus -n build:env:create $source_env "$TERMINUS_ENV" --yes --clone-content --notify="$NOTIFY"
else
  # multidev exists, just push code
  terminus -n build:env:push $target_env
fi

terminus -n drush $target_env cache-rebuild

# Run updatedb to ensure that the cloned database is updated for the new code.
terminus -n drush $target_env -- updatedb -y

# If exported configuration is available, then import it.
if [ -f "config/system.site.yml" ] ; then
  terminus -n drush $target_env -- config-import --yes
fi

terminus -n drush $target_env -- deploy:hook --yes
