#!/bin/bash

set -eo pipefail

#
# This script prepares the site-under-test by cloning the database from
# an existing site.
#
# Use EITHER this script OR the re-install-new script; do not run both.
#
clone_content=""

# if this is the develop branch, set the TERMINUS_ENV to develop
if [[ $CIRCLE_BRANCH == "develop" ]] ; then
  TERMINUS_ENV="preview"
fi

# check if the $TERMINUS_ENV already exists.  if it does, don't clone the content
if ! terminus -n env:info sfgov.$TERMINUS_ENV ; then # env does not exist
  clone_content="--clone-content"
fi

# Create a new multidev site to test on
terminus -n env:wake "$TERMINUS_SITE.dev"
terminus -n build:env:create "$TERMINUS_SITE.dev" "$TERMINUS_ENV" --yes $clone_content --notify="$NOTIFY"

terminus -n drush "$TERMINUS_SITE.$TERMINUS_ENV" cache-rebuild

# Run updatedb to ensure that the cloned database is updated for the new code.
terminus -n drush "$TERMINUS_SITE.$TERMINUS_ENV" -- updatedb -y

# If any modules, or theme files have been moved around or reorganized, in order to avoid
# "The website encountered an unexpected error. Please try again later." error on First Visit
terminus -n drush "$TERMINUS_SITE.$TERMINUS_ENV" cache-rebuild

# If exported configuration is available, then import it.
if [ -f "config/system.site.yml" ] ; then
  terminus -n drush "$TERMINUS_SITE.$TERMINUS_ENV" -- config-import --yes
fi
