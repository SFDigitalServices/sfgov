#!/bin/bash

set -eo pipefail

#
# This script prepares the site-under-test by cloning the database from
# an existing site.
#
# Use EITHER this script OR the re-install-new script; do not run both.
#

# check if the $TERMINUS_ENV already exists.  if it does, don't clone the content
if ! terminus -n env:info $TERMINUS_SITE.$TERMINUS_ENV ; then # env does not exist
  # Create a new multidev site to test on
  terminus -n env:wake "$TERMINUS_SITE.dev"
  terminus -n build:env:create "$TERMINUS_SITE.dev" "$TERMINUS_ENV" --yes --clone-content --notify="$NOTIFY"
else
  # multidev exists, just push code
  terminus -n build:env:push "$TERMINUS_SITE.$TERMINUS_ENV"
fi

# drush deploy will execute the following:
# drush updatedb --no-cache-clear
# drush cache:rebuild
# drush config:import
# drush cache:rebuild
# drush deploy:hook # maybe only run this
terminus -n drush "$TERMINUS_SITE.$TERMINUS_ENV" -- deploy:hook --yes

# If exported configuration is available, then import it.
if [ -f "config/system.site.yml" ] ; then
  terminus -n drush "$TERMINUS_SITE.$TERMINUS_ENV" -- config-import --yes
fi
